import java.util.* ;
import java.io.*; 
/************************************************************

    Following is the TreeNode class structure:

    class BinaryTreeNode {
		int val;
		BinaryTreeNode left;
		BinaryTreeNode right;

		BinaryTreeNode(int val) {
			this.val = val;
			this.left = null;
			this.right = null;
		}
	}

************************************************************/

public class Solution {
	static class Pair {
		int index;
		BinaryTreeNode node;
		Pair(BinaryTreeNode node, int index) {
			this.node = node;
			this.index = index;
		}
	}
	public static ArrayList<Integer> getTopView(BinaryTreeNode root) {
		// Write your code here.
		ArrayList<Integer> top = new ArrayList<>();
		if (root == null)
			return top;
		Queue<Pair> que = new ArrayDeque<>();
		Map<Integer, Integer> map = new HashMap<>();
		que.offer(new Pair(root, 0));
		while (!que.isEmpty()) {
			BinaryTreeNode cur = que.peek().node;
			int ind = que.poll().index;

			if (!map.containsKey(ind))	map.put(ind, cur.val);
			if (cur.left != null)		que.offer(new Pair(cur.left, ind - 1));
			if (cur.right != null)		que.offer(new Pair(cur.right, ind + 1));
		}
		int[][] arr = new int[map.size()][2];
		int ind = 0;
		for (int key: map.keySet()) {
			arr[ind][0] = key;
			arr[ind++][1] = map.get(key);
		}
		Arrays.sort(arr, (a, b) -> (a[0] - b[0]));
		for (int[] a: arr) {
			top.add(a[1]);
		}
		return top;
	}
}
