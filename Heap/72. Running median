
import java.util.Comparator;
import java.util.*;

public class Solution {
	public static void findMedian(int arr[])  {
        int n = arr.length;
        if (n == 0)
            return;
	    PriorityQueue<Integer> max = new PriorityQueue<>((a,b) -> (b - a));	
        PriorityQueue<Integer> min = new PriorityQueue<>((a,b) -> (a - b));
        max.offer(arr[0]);
        System.out.print(arr[0] + " ");
        for (int i = 1; i < n; i++) {
            if (arr[i] <= max.peek())
                max.offer(arr[i]);
            else    
                min.offer(arr[i]);

            if (min.size() - max.size() > 1)
                max.offer(min.poll());
            else if (max.size() - min.size() > 1)
                min.offer(max.poll());

            int median = (min.size() > max.size())? min.peek() : (max.size() > min.size())? max.peek(): ((min.peek() + max.peek()) / 2);
            System.out.print(median + " ");
        }
    }
}
