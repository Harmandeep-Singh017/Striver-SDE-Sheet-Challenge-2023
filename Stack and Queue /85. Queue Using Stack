import java.util.Stack;
public class Queue {
    // Define the data members(if any) here.
    Stack<Integer> stack1;
    Stack<Integer> stack2;

    Queue() {
        // Initialize your data structure here.
        stack1 = new Stack<>();
        stack2 = new Stack<>();
    }

    void enQueue(int val) {
        // Implement the enqueue() function.
        while (!stack1.isEmpty()) 
            stack2.push(stack1.pop());
        stack1.push(val);
        while (!stack2.isEmpty()) 
            stack1.push(stack2.pop());
    }

    int deQueue() {
        // Implement the dequeue() function.
        if (isEmpty())
            return -1;
        return stack1.pop();
    }

    int peek() {
        // Implement the peek() function here.
        if (isEmpty())
            return -1;
        return stack1.peek();
    }

    boolean isEmpty() {
        // Implement the isEmpty() function here.
        return stack1.size() == 0;
    }
}
