public class Solution {
	public static boolean isPossible(int[][] matrix, int r, int c, int val) {
		for (int i = 0; i < 9; i++) {
			if (matrix[r][i] == val)
				return false;
			if (matrix[i][c] == val)
				return false;
		}
		int nr = (r / 3) * 3, nc = (c / 3) * 3;
		for (int i = nr; i < nr + 3; i++) {
			for (int j = nc; j < nc + 3; j++) {
				if (matrix[i][j] == val)
					return false;
			}
		}
		return true;
	}

	public static boolean isItSudoku(int matrix[][]) {
		for (int i = 0; i < 9; i++) {
			for (int j = 0; j < 9; j++) {
				if (matrix[i][j] == 0) {
					for (int val = 1; val <= 9; val++) {
						if (isPossible(matrix, i, j, val)) {
							matrix[i][j] = val;
							if (isItSudoku(matrix))
								return true;
							else
								matrix[i][j] = 0;
						}
					}
					return false;
				}
			}
		}
		return true;		
	}
}
