import java.util.* ;
import java.io.*; 

public class Solution {
	public static ArrayList<String> DFS(String s, Set<String> wordDict, HashMap<String, ArrayList<String>>map) {
		if (map.containsKey(s)) 
			return map.get(s);
			
		ArrayList<String> res = new ArrayList<String>();     
		if (s.length() == 0) {
			res.add("");
			return res;
		}               
		for (String word : wordDict) {
			if (s.startsWith(word)) {
				ArrayList<String> sublist = DFS(s.substring(word.length()), wordDict, map);
				for (String sub : sublist) 
					res.add(word + (sub.isEmpty() ? "" : " ") + sub);               
			}
		}       
		map.put(s, res);
		return res;
	}

	public static ArrayList<String> wordBreak(String s, ArrayList<String> dictionary) {
		Set<String> set = new HashSet<>(dictionary);
		return DFS(s, set, new HashMap<String, ArrayList<String>>());
	}
}
