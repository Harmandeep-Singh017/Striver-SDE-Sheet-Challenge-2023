/*
    1. Use 3 pointers, 
          i -> m - 1, pointer on arr1[]
          j -> n - 1, pointer on arr2[]
          k -> m + n - 1, pointer on arr1[]
    2. Keep on comparing (arr1[i], arr[j]), while all elements of arr2 is not stored in arr1
          (a) If arr1[i] > arr2[j], then 
                 arr1[k] = arr1[i]
          (b) else
                 arr1[k] = arr2[j]
*/


import java.io.*;
import java.util.* ;

public class Solution {
    public static int[] ninjaAndSortedArrays(int arr1[], int arr2[], int m, int n) {
        int i = m - 1, j = n - 1, k = n + m - 1;
        while (j >= 0 && k > i) {
            if (i >= 0 && arr1[i] > arr2[j])
                arr1[k--] = arr1[i--];
            else
                arr1[k--] = arr2[j--];
        }
        return arr1;
    }
}
