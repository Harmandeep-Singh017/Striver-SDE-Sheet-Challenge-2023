/*
    Use HashMap and keep on storing the sum till each index
    If that sum is already present in HashMap then that means from previous sum till now, we can have a subarray with sum 0
*/


import java.io.*;
import java.util.* ;

public class Solution {
	public static int LongestSubsetWithZeroSum(ArrayList<Integer> arr) {
		int n = arr.size();
		HashMap<Integer, Integer> map = new HashMap<>();
		int sum = 0, max = 0;
		map.put(0, -1);
		for (int i = 0; i < n; i++) {
			sum += arr.get(i);
			if (map.containsKey(sum)) {
				max = Math.max(max, i - map.get(sum));
			}
			else
				map.put(sum, i);
		}
		return max;
	}
}
